def inverse(perm):
    return [cycle.copy()[::-1] for cycle in perm]


def image(perm, x):
    z = []
    for y in perm:
        if x in y:
            z = y
            break
    else:
        return x

    if z[-1] != x:
        return z[z.index(x)+1]
    else:
        return z[0]


def compose(perm1, perm2):
    # returns perm1 o perm2
    checked = []
    product = []
    cycle = [0]
    x = 0
    while True:
        if x in checked:
            cycle.pop()
            if len(cycle) > 1:
                product.append(cycle.copy())
            if len(checked) == 54:
                break
            x = min([i for i in range(54) if i not in checked])
            cycle = [x]
            continue

        checked.append(x)
        x = image(perm1, image(perm2, x))
        cycle.append(x)

    return product


moves_all = {
    "D" : [[0, 27, 18, 9], [1, 28, 19, 10], [2, 29, 20, 11], [36, 42, 44, 38], [37, 39, 43, 41]], 
    "D'": [[9, 18, 27, 0], [10, 19, 28, 1], [11, 20, 29, 2], [38, 44, 42, 36], [41, 43, 39, 37]], 
    "D2": [[0, 18], [1, 19], [2, 20], [9, 27], [10, 28], [11, 29], [36, 44], [37, 43], [38, 42], [39, 41]], 

    "U" : [[6, 15, 24, 33], [7, 16, 25, 34], [8, 17, 26, 35], [45, 51, 53, 47], [46, 48, 52, 50]], 
    "U'": [[33, 24, 15, 6], [34, 25, 16, 7], [35, 26, 17, 8], [47, 53, 51, 45], [50, 52, 48, 46]], 
    "U2": [[6, 24], [7, 25], [8, 26], [15, 33], [16, 34], [17, 35], [45, 53], [46, 52], [47, 51], [48, 50]], 

    "R" : [[2, 47, 24, 38], [5, 50, 21, 41], [8, 53, 18, 44], [27, 33, 35, 29], [28, 30, 34, 32]], 
    "R'": [[38, 24, 47, 2], [41, 21, 50, 5], [44, 18, 53, 8], [29, 35, 33, 27], [32, 34, 30, 28]], 
    "R2": [[2, 24], [5, 21], [8, 18], [27, 35], [28, 34], [29, 33], [30, 32], [38, 47], [41, 50], [44, 53]], 

    "L" : [[0, 36, 26, 45], [3, 39, 23, 48], [6, 42, 20, 51], [9, 15, 17, 11], [10, 12, 16, 14]], 
    "L'": [[45, 26, 36, 0], [48, 23, 39, 3], [51, 20, 42, 6], [11, 17, 15, 9], [14, 16, 12, 10]], 
    "L2": [[0, 26], [3, 23], [6, 20], [9, 17], [10, 16], [11, 15], [12, 14], [36, 45], [39, 48], [42, 51]], 

    "F" : [[11, 45, 33, 44], [14, 46, 30, 43], [17, 47, 27, 42], [0, 6, 8, 2], [1, 3, 7, 5]], 
    "F'": [[44, 33, 45, 11], [43, 30, 46, 14], [42, 27, 47, 17], [2, 8, 6, 0], [5, 7, 3, 1]], 
    "F2": [[0, 8], [1, 7], [2, 6], [3, 5], [11, 33], [14, 30], [17, 27], [42, 47], [43, 46], [44, 45]], 

    "B" : [[9, 38, 35, 51], [12, 37, 32, 52], [15, 36, 29, 53], [18, 24, 26, 20], [19, 21, 25, 23]],
    "B'": [[51, 35, 38, 9], [52, 32, 37, 12], [53, 29, 36, 15], [20, 26, 24, 18], [23, 25, 21, 19]],  
    "B2": [[9, 35], [12, 32], [15, 29], [18, 26], [19, 25], [20, 24], [21, 23], [36, 53], [37, 52], [38, 51]], 

    "M" : [[1, 37, 25, 46], [4, 40, 22, 49], [7, 43, 19, 52]], 
    "M'": [[46, 25, 37, 1], [49, 22, 40, 4], [52, 19, 43, 7]], 
    "M2": [[1, 25], [4, 22], [7, 19], [37, 46], [40, 49], [43, 52]], 

    "E" : [[3, 30, 21, 12], [4, 31, 22, 13], [5, 32, 23, 14]], 
    "E'": [[12, 21, 30, 3], [13, 22, 31, 4], [14, 23, 32, 5]], 
    "E2": [[3, 21], [4, 22], [5, 23], [12, 30], [13, 31], [14, 32]], 

    "S" : [[10, 48, 34, 41], [13, 49, 31, 40], [16, 50, 28, 39]], 
    "S'": [[41, 34, 48, 10], [40, 31, 49, 13], [39, 28, 50, 16]], 
    "S2": [[10, 34], [13, 31], [16, 28], [39, 50], [40, 49], [41, 48]]
}


if __name__ == '__main__':
    actions = ["U", "D'", "E'", "F'", "B", "S'", "L", "R'", "M"]
    perm = []
    for i in range(4):
        for action in actions:
            perm = compose(moves_all[action], perm)

    print(perm)
